package com.example.travel_roulette.vo

//data class PrefectureSeed(
//    val hokkaidoState: PrefectureState = PrefectureState.None(Prefecture.Hokkaido),
//    val aomoriState: PrefectureState = PrefectureState.None(Prefecture.Aomori),
//    val akitaState: PrefectureState = PrefectureState.None(Prefecture.Akita),
//    val iwateState: PrefectureState = PrefectureState.None(Prefecture.Iwate),
//    val yamagataState: PrefectureState = PrefectureState.None(Prefecture.Yamagata),
//    val miyagiState: PrefectureState = PrefectureState.None(Prefecture.Miyagi),
//    val hukushimaState: PrefectureState = PrefectureState.None(Prefecture.Hukushima),
//    val gunmaState: PrefectureState = PrefectureState.None(Prefecture.Gunma),
//    val tochigiState: PrefectureState = PrefectureState.None(Prefecture.Tochigi),
//    val saitamaState: PrefectureState = PrefectureState.None(Prefecture.Saitama),
//    val ibarakiState: PrefectureState = PrefectureState.None(Prefecture.Ibaraki),
//    val tokyoState: PrefectureState = PrefectureState.None(Prefecture.Tokyo),
//    val chibaState: PrefectureState = PrefectureState.None(Prefecture.Chiba),
//    val kanagawaState: PrefectureState = PrefectureState.None(Prefecture.Kanagawa),
//    val nigataState: PrefectureState = PrefectureState.None(Prefecture.Nigata),
//    val naganoState: PrefectureState = PrefectureState.None(Prefecture.Nagano),
//    val yamanashiState: PrefectureState = PrefectureState.None(Prefecture.Yamanashi),
//    val shizuokaState: PrefectureState = PrefectureState.None(Prefecture.Shizuoka),
//    val toyamaState: PrefectureState = PrefectureState.None(Prefecture.Toyama),
//    val gihuState: PrefectureState = PrefectureState.None(Prefecture.Gihu),
//    val aichiState: PrefectureState = PrefectureState.None(Prefecture.Aichi),
//    val ishikawaState: PrefectureState = PrefectureState.None(Prefecture.Ishikawa),
//    val hukuiState: PrefectureState = PrefectureState.None(Prefecture.Hukui),
//    val shigaState: PrefectureState = PrefectureState.None(Prefecture.Shiga),
//    val mieState: PrefectureState = PrefectureState.None(Prefecture.Mie),
//    val kyotoState: PrefectureState = PrefectureState.None(Prefecture.Kyoto),
//    val naraState: PrefectureState = PrefectureState.None(Prefecture.Nara),
//    val hyogoState: PrefectureState = PrefectureState.None(Prefecture.Hyogo),
//    val osakaState: PrefectureState = PrefectureState.None(Prefecture.Osaka),
//    val wakayamaState: PrefectureState = PrefectureState.None(Prefecture.Wakayama),
//    val tottoriState: PrefectureState = PrefectureState.None(Prefecture.Tottori),
//    val okayamaState: PrefectureState = PrefectureState.None(Prefecture.Okayama),
//    val shimaneState: PrefectureState = PrefectureState.None(Prefecture.Shimane),
//    val hiroshimaState: PrefectureState = PrefectureState.None(Prefecture.Hiroshima),
//    val yamaguchiState: PrefectureState = PrefectureState.None(Prefecture.Yamaguchi),
//    val kagawaState: PrefectureState = PrefectureState.None(Prefecture.Kagawa),
//    val tokushimaState: PrefectureState = PrefectureState.None(Prefecture.Tokushima),
//    val ehimeState: PrefectureState = PrefectureState.None(Prefecture.Ehime),
//    val kochiState: PrefectureState = PrefectureState.None(Prefecture.Kochi),
//    val hukuokaState: PrefectureState = PrefectureState.None(Prefecture.Hukuoka),
//    val nagasakiState: PrefectureState = PrefectureState.None(Prefecture.Nagasaki),
//    val sagaState: PrefectureState = PrefectureState.None(Prefecture.Saga),
//    val oitaState: PrefectureState = PrefectureState.None(Prefecture.Oita),
//    val miyazakiState: PrefectureState = PrefectureState.None(Prefecture.Miyazaki),
//    val kumamotoState: PrefectureState = PrefectureState.None(Prefecture.Kumamoto),
//    val kagoshimaState: PrefectureState = PrefectureState.None(Prefecture.Kagoshima),
//    val okinawaState: PrefectureState = PrefectureState.None(Prefecture.Okinawa),
//)

sealed class PrefectureState(open val prefecture: Prefecture) {
    data class None(override val prefecture: Prefecture) : PrefectureState(prefecture)
    data class UnSelectable(override val prefecture: Prefecture) : PrefectureState(prefecture)
    data class Select(override val prefecture: Prefecture) : PrefectureState(prefecture)

    fun changeState() = None(prefecture).takeIf { this is UnSelectable } ?: UnSelectable(prefecture)

    companion object {
        val allPrefecture = listOf(
            None(Prefecture.Hokkaido),
            None(Prefecture.Aomori),
            None(Prefecture.Akita),
            None(Prefecture.Iwate),
            None(Prefecture.Yamagata),
            None(Prefecture.Miyagi),
            None(Prefecture.Hukushima),
            None(Prefecture.Gunma),
            None(Prefecture.Tochigi),
            None(Prefecture.Saitama),
            None(Prefecture.Ibaraki),
            None(Prefecture.Tokyo),
            None(Prefecture.Chiba),
            None(Prefecture.Kanagawa),
            None(Prefecture.Nigata),
            None(Prefecture.Nagano),
            None(Prefecture.Yamanashi),
            None(Prefecture.Shizuoka),
            None(Prefecture.Toyama),
            None(Prefecture.Gihu),
            None(Prefecture.Aichi),
            None(Prefecture.Ishikawa),
            None(Prefecture.Hukui),
            None(Prefecture.Shiga),
            None(Prefecture.Mie),
            None(Prefecture.Kyoto),
            None(Prefecture.Nara),
            None(Prefecture.Hyogo),
            None(Prefecture.Osaka),
            None(Prefecture.Wakayama),
            None(Prefecture.Tottori),
            None(Prefecture.Okayama),
            None(Prefecture.Shimane),
            None(Prefecture.Hiroshima),
            None(Prefecture.Yamaguchi),
            None(Prefecture.Kagawa),
            None(Prefecture.Tokushima),
            None(Prefecture.Ehime),
            None(Prefecture.Kochi),
            None(Prefecture.Hukuoka),
            None(Prefecture.Nagasaki),
            None(Prefecture.Saga),
            None(Prefecture.Oita),
            None(Prefecture.Miyazaki),
            None(Prefecture.Kumamoto),
            None(Prefecture.Kagoshima),
            None(Prefecture.Okinawa)
        )
    }
}

enum class Area {
    Tohoku,
    Kanto,
    Chubu,
    Kansai,
    Chugoku,
    Shikoku,
    Kyushu
}

enum class Prefecture {
    Hokkaido,
    Aomori,
    Akita,
    Iwate,
    Yamagata,
    Miyagi,
    Hukushima,
    Gunma,
    Tochigi,
    Saitama,
    Ibaraki,
    Tokyo,
    Chiba,
    Kanagawa,
    Nigata,
    Nagano,
    Yamanashi,
    Shizuoka,
    Toyama,
    Gihu,
    Aichi,
    Ishikawa,
    Hukui,
    Shiga,
    Mie,
    Kyoto,
    Nara,
    Hyogo,
    Osaka,
    Wakayama,
    Tottori,
    Okayama,
    Shimane,
    Hiroshima,
    Yamaguchi,
    Kagawa,
    Tokushima,
    Ehime,
    Kochi,
    Hukuoka,
    Nagasaki,
    Saga,
    Oita,
    Miyazaki,
    Kumamoto,
    Kagoshima,
    Okinawa,
}